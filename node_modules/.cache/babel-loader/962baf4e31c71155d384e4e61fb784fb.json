{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jonathanwashington/dev/Side Projects/book-bug-npm/src/components/Results.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\n\nfunction Results(props) {\n  _s();\n\n  const [searchValue, setSearch] = useState('');\n  const [selectedBook, setSelection] = useState('');\n  console.log('propsRating!');\n  console.log(props);\n\n  const handleClick = event => {\n    let activeBook = props.results.find(x => x.id === event.target.id);\n    console.log(activeBook);\n    props.displayBookPage(activeBook);\n  }; // prevent loading before results load\n\n\n  if (!props.results) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contentArea\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.results.map(book => /*#__PURE__*/_jsxDEV(\"li\", {\n        id: book.id,\n        className: \"bookResult\",\n        onClick: handleClick,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"bookThumb\",\n          height: \"125\",\n          src: book.imageLinks ? book.imageLinks.thumbnail : 'null'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"resultInfo\",\n          children: [book.title, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), \"by \", book.authors]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Results, \"EF3DrHv9eULsoNQZkF1/2hi1dJA=\");\n\n_c = Results;\nexport default Results;\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"sources":["/Users/jonathanwashington/dev/Side Projects/book-bug-npm/src/components/Results.js"],"names":["React","useEffect","useState","Results","props","searchValue","setSearch","selectedBook","setSelection","console","log","handleClick","event","activeBook","results","find","x","id","target","displayBookPage","map","book","imageLinks","thumbnail","title","authors"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAuB;AAAA;;AACrB,QAAM,CAACC,WAAD,EAAcC,SAAd,IAA2BJ,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACK,YAAD,EAAeC,YAAf,IAA+BN,QAAQ,CAAC,EAAD,CAA7C;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;;AAGA,QAAMO,WAAW,GAAGC,KAAK,IAAI;AAC3B,QAAIC,UAAU,GAAGT,KAAK,CAACU,OAAN,CAAcC,IAAd,CAAmBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASL,KAAK,CAACM,MAAN,CAAaD,EAA9C,CAAjB;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYG,UAAZ;AACAT,IAAAA,KAAK,CAACe,eAAN,CAAsBN,UAAtB;AACD,GAJD,CARqB,CAcrB;;;AACA,MAAI,CAACT,KAAK,CAACU,OAAX,EAAmB;AACjB,WAAQ,IAAR;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BACE;AAAA,gBACGV,KAAK,CAACU,OAAN,CAAcM,GAAd,CAAkBC,IAAI,iBACrB;AACE,QAAA,EAAE,EAAEA,IAAI,CAACJ,EADX;AAEE,QAAA,SAAS,EAAC,YAFZ;AAGE,QAAA,OAAO,EAAEN,WAHX;AAAA,gCAKE;AACE,UAAA,SAAS,EAAC,WADZ;AAEE,UAAA,MAAM,EAAC,KAFT;AAGE,UAAA,GAAG,EAAEU,IAAI,CAACC,UAAL,GAAkBD,IAAI,CAACC,UAAL,CAAgBC,SAAlC,GAA8C;AAHrD;AAAA;AAAA;AAAA;AAAA,gBALF,eAUE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,qBACGF,IAAI,CAACG,KADR,eAEE;AAAA;AAAA;AAAA;AAAA,kBAFF,SAGMH,IAAI,CAACI,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBA;;GA1COtB,O;;KAAAA,O;AA4CT,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction Results(props){\n  const [searchValue, setSearch] = useState('');\n  const [selectedBook, setSelection] = useState('');\n\n  console.log('propsRating!');\n  console.log(props);\n\n\n  const handleClick = event => {\n    let activeBook = props.results.find(x => x.id === event.target.id);\n    console.log(activeBook);\n    props.displayBookPage(activeBook);\n  }\n\n  // prevent loading before results load\n  if (!props.results){\n    return (null);\n  }\n\n  return(\n    <div className='contentArea'>\n      <ul>\n        {props.results.map(book => (\n          <li\n            id={book.id}\n            className='bookResult'\n            onClick={handleClick}\n          >\n            <img\n              className='bookThumb'\n              height='125'\n              src={book.imageLinks ? book.imageLinks.thumbnail : 'null'}\n            />\n            <div className='resultInfo'>\n              {book.title}\n              <br/>\n              by {book.authors}\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n)}\n\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}